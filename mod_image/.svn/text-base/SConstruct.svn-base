
import subprocess
from os.path import join as pjoin

EnsureSConsVersion(1, 1, 0)


opts = Options('build.py')

opts.Add(PathOption('APXS', 'Path apxs','/usr/local/bin/apxs'))
opts.Add(PathOption('V8', 'Prefix to V8 install', '/usr/local/v8'))

env = Environment(options=opts)

def apxs_query(path, key):
    cmd = [path, "-q", key]
    s = subprocess.Popen(cmd, stdout=subprocess.PIPE)
    out = s.communicate()[0]
    s.wait()
    return out.strip()

apr_config = apxs_query(env["APXS"], 'APR_CONFIG')
apu_config = apxs_query(env["APXS"], 'APU_CONFIG')

env.ParseConfig(apr_config + ' --cflags --cppflags --includes --ldflags')
env.ParseConfig(apu_config + ' --includes  --ldflags')

# TODO: Move to httpd-config when it comes out !
env.ParseConfig(env['APXS'] + ' -q EXTRA_CFLAGS')
env.ParseConfig(env['APXS'] + ' -q EXTRA_CPPFLAGS')
env.ParseConfig(env['APXS'] + ' -q EXTRA_LIBS')
env.ParseConfig(env['APXS'] + ' -q EXTRA_LIBS')

env.AppendUnique(CPPPATH = [apxs_query(env['APXS'], 'exp_includedir')])
if env['PLATFORM'] == 'darwin':
    env.AppendUnique(LINKFLAGS = ['-undefined', 'dynamic_lookup'])

env.AppendUnique(CPPPATH = [pjoin(env['V8'], 'include')])
env.AppendUnique(LIBPATH = [pjoin(env['V8'], 'lib')])
env.AppendUnique(LIBS = ['v8'])

module = env.LoadableModule(target = "mod_v8.so", source = ['mod_v8.cpp'])

install_path = apxs_query(env["APXS"], 'exp_libexecdir')
imod = env.Install(install_path, source = [module])
env.Alias('install', imod)

targets = [module]

env.Default(targets)
